{"version":3,"sources":["components/ContactElement/ContactListItem.module.css","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactElement/ContactElement.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Section","title","children","ContactForm","addContact","useState","name","setName","number","setNumber","changeHandler","e","target","value","console","log","reset","onSubmit","preventDefault","contact","id","uuid","className","s","form","input","type","placeholder","onChange","disabled","length","ContactListItem","onDelete","li","onClick","ContactList","contacts","map","Filter","App","setContacts","filter","setFilter","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","newName","toLowerCase","includes","trim","alert","filterContactsByName","updatedContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,GAAK,8B,6HCeRC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gCCgJQC,MAhJf,YAAsC,IAAfC,EAAc,EAAdA,WAAc,EACXC,mBAAS,IADE,mBAC5BC,EAD4B,KACtBC,EADsB,OAEPF,mBAAS,IAFF,mBAE5BG,EAF4B,KAEpBC,EAFoB,KAI7BC,EAAgB,SAACC,GAAO,IAAD,EACHA,EAAEC,OAAlBN,EADmB,EACnBA,KAAMO,EADa,EACbA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACEC,QAAQC,IAAI,WAkBZC,EAAQ,WACZT,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAMQ,SAnBc,SAACN,GACrBA,EAAEO,iBAEF,IAAMC,EAAU,CACdC,GAAIC,MACJf,KAAMA,EACNE,OAAQA,GAEVJ,EAAWe,GAEXH,KAS+BM,UAAWC,IAAEC,KAA5C,UACE,0CAEE,uBACEF,UAAWC,IAAEE,MACbC,KAAK,OACLpB,KAAK,OACLO,MAAOP,EACPqB,YAAY,aACZC,SAAUlB,OAId,4CAEE,uBACEY,UAAWC,IAAEE,MACbC,KAAK,MACLpB,KAAK,SACLO,MAAOL,EACPmB,YAAY,eACZC,SAAUlB,OAGd,wBAAQgB,KAAK,SAASG,UAAWvB,EAAKwB,SAAWtB,EAAOsB,OAAxD,6B,iBCjDSC,MAnBf,YAAsD,IAA3BzB,EAA0B,EAA1BA,KAAME,EAAoB,EAApBA,OAAQwB,EAAY,EAAZA,SACvC,OACE,qBAAIV,UAAWC,IAAEU,GAAjB,UACE,8BACG3B,EADH,KACWE,KAEX,wBAAQkB,KAAK,SAASQ,QAASF,EAA/B,wBC0BSG,MAhCf,YAA8C,IAAvBC,EAAsB,EAAtBA,SAAUJ,EAAY,EAAZA,SAC/B,OACE,6BACGI,EACCA,EAASC,KAAI,gBAAGjB,EAAH,EAAGA,GAAId,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACX,cAAC,EAAD,CAEEF,KAAMA,EACNE,OAAQA,EACRwB,SAAU,kBAAMA,EAASZ,KAHpBA,MAOT,4ECdO,SAASkB,EAAT,GAA+B,IAAbV,EAAY,EAAZA,SAC/B,OACE,4CAEE,uBAAOF,KAAK,OAAOpB,KAAK,SAASsB,SAAUA,OCgJlCW,MAhJf,WAAgB,IAAD,EACmBlC,mBAAS,IAD5B,mBACN+B,EADM,KACII,EADJ,OAEenC,mBAAS,IAFxB,mBAENoC,EAFM,KAEEC,EAFF,KA0Cb,OAtCAC,qBAAU,WACHC,KAAKC,MAAMC,aAAaC,QAAQ,aAIrCP,EAAYI,KAAKC,MAAMC,aAAaC,QAAQ,cAH1CD,aAAaE,QAAQ,WAAY,QAIlC,IAEHL,qBAAU,WACRG,aAAaE,QAAQ,WAAYJ,KAAKK,UAAUb,MAC/C,CAACA,IA6BF,qCACE,cAAC,EAAD,CAASnC,MAAM,YAAf,SACE,cAAC,EAAD,CAAaG,WArBA,SAACe,GAClB,IAAM+B,EAAU/B,EAAQb,KACV8B,EAASC,KAAI,SAAClB,GAAD,OAAaA,EAAQb,KAAK6C,iBAC3CC,SAASF,EAAQC,cAAcE,QACvCC,MAAM,GAAD,OAAIJ,EAAJ,gCAGPV,EAAY,GAAD,mBAAKJ,GAAL,CAAejB,UAgBxB,eAAC,EAAD,CAASlB,MAAM,WAAf,UACE,cAACqC,EAAD,CAAQV,SAhCQ,SAACjB,GACrB+B,EAAU/B,EAAEC,OAAOC,UAiCf,cAAC,EAAD,CACEuB,SAjBqB,WAC3B,GAAIA,EAASN,OACX,OAAOM,EAASK,QAAO,SAACtB,GAAD,OACrBA,EAAQb,KAAK6C,cAAcC,SAASX,EAAOU,kBAc/BI,GACVvB,SAhCkB,SAACZ,GACzB,IAAMoC,EAAkBpB,EAASK,QAAO,SAACtB,GAAD,OAAaA,EAAQC,KAAOA,KACpEoB,EAAY,YAAIgB,cCvBpBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B/D,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,8B","file":"static/js/main.fff0d746.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactListItem_li__13sN6\"};","import PropTypes from \"prop-types\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nimport uuid from \"react-uuid\";\r\n\r\nfunction ContactForm({ addContact }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const changeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        console.log(\"error\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const contact = {\r\n      id: uuid(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    addContact(contact);\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className={s.form}>\r\n      <label>\r\n        Name:\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          placeholder=\"enter name\"\r\n          onChange={changeHandler}\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Number:\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          placeholder=\"enter number\"\r\n          onChange={changeHandler}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" disabled={!name.length || !number.length}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// class ContactForm extends Component {\r\n//   state = {\r\n//     name: \"\",\r\n//     number: \"\",\r\n//   };\r\n\r\n// changeHandler = (e) => {\r\n//   const { name, value } = e.target;\r\n\r\n//   setState({\r\n//     [name]: value,\r\n//   });\r\n// };\r\n\r\n// submitHandler = (e) => {\r\n//   e.preventDefault();\r\n//   const { name, number } = state;\r\n//   const contact = {\r\n//     id: uuid(),\r\n//     name: name,\r\n//     number: number,\r\n//   };\r\n//   props.addContact(contact);\r\n\r\n//   reset();\r\n// };\r\n\r\n// reset = () => {\r\n//   setState({\r\n//     name: \"\",\r\n//     number: \"\",\r\n//   });\r\n// };\r\n\r\n//   render() {\r\n//     const { name, number } = state;\r\n// return (\r\n//   <form onSubmit={submitHandler} className={s.form}>\r\n//     <label>\r\n//       Name:\r\n//       <input\r\n//         className={s.input}\r\n//         type=\"text\"\r\n//         name=\"name\"\r\n//         value={name}\r\n//         placeholder=\"enter name\"\r\n//         onChange={changeHandler}\r\n//       />\r\n//     </label>\r\n\r\n//     <label>\r\n//       Number:\r\n//       <input\r\n//         className={s.input}\r\n//         type=\"tel\"\r\n//         name=\"number\"\r\n//         value={number}\r\n//         placeholder=\"enter number\"\r\n//         onChange={changeHandler}\r\n//       />\r\n//     </label>\r\n//     <button type=\"submit\" disabled={!name.length || !number.length}>\r\n//       Add contact\r\n//     </button>\r\n//   </form>\r\n// );\r\n//   }\r\n// }\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactListItem.module.css\";\r\n\r\nfunction ContactListItem({ name, number, onDelete }) {\r\n  return (\r\n    <li className={s.li}>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button type=\"button\" onClick={onDelete}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactElement/ContactElement\";\r\n\r\nfunction ContactList({ contacts, onDelete }) {\r\n  return (\r\n    <ul>\r\n      {contacts ? (\r\n        contacts.map(({ id, name, number }) => (\r\n          <ContactListItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onDelete={() => onDelete(id)}\r\n          />\r\n        ))\r\n      ) : (\r\n        <p>no contact with such name in your phone </p>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\n\r\nexport default function Filter({ onChange }) {\r\n  return (\r\n    <label>\r\n      Filter:\r\n      <input type=\"text\" name=\"filter\" onChange={onChange}></input>\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from \"react\";\nimport Section from \"./components/Section/Section.js\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter.js\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    if (!JSON.parse(localStorage.getItem(\"contacts\"))) {\n      localStorage.setItem(\"contacts\", \"[]\");\n      return;\n    }\n    setContacts(JSON.parse(localStorage.getItem(\"contacts\")));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const changeHandler = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const deleteContactbyId = (id) => {\n    const updatedContacts = contacts.filter((contact) => contact.id !== id);\n    setContacts([...updatedContacts]);\n  };\n  const addContact = (contact) => {\n    const newName = contact.name;\n    const names = contacts.map((contact) => contact.name.toLowerCase());\n    if (names.includes(newName.toLowerCase().trim())) {\n      alert(`${newName} is already in contact list`);\n      return;\n    }\n    setContacts([...contacts, contact]);\n  };\n\n  const filterContactsByName = () => {\n    if (contacts.length) {\n      return contacts.filter((contact) =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  };\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm addContact={addContact} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter onChange={changeHandler} />\n        {/* {contacts.length > 1 && <Filter onChange={changeHandler} />} */}\n        <ContactList\n          contacts={filterContactsByName()}\n          onDelete={deleteContactbyId}\n        />\n      </Section>\n    </>\n  );\n}\n\n// class App extends Component {\n//   state = {\n//     contacts: [\n//       // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     ],\n//     filter: \"\",\n//   };\n\n// componentDidMount() {\n// if (!JSON.parse(localStorage.getItem(\"contacts\"))) {\n//   localStorage.setItem(\"contacts\", \"[]\");\n//   return;\n// }\n// setState(() => ({\n//   contacts: JSON.parse(localStorage.getItem(\"contacts\")),\n// }));\n// }\n\n// componentDidUpdate(prevProps, prevState) {\n//   if (prevState.contacts !== state.contacts) {\n// localStorage.setItem(\"contacts\", JSON.stringify(state.contacts));\n//   }\n// }\n\n// changeHandler = (e) => {\n//   const { name, value } = e.target;\n\n//   setState({\n//     [name]: value,\n//   });\n// };\n\n// deleteContactbyId = (id) => {\n//   const { contacts } = state;\n//   const updatedContacts = contacts.filter((contact) => contact.id !== id);\n//   setState({\n//     contacts: [...updatedContacts],\n//   });\n// };\n\n// addContact = (contact) => {\n//   const newName = contact.name;\n//   const names = state.contacts.map((contact) =>\n//     contact.name.toLowerCase()\n//   );\n//   if (names.includes(newName.toLowerCase().trim())) {\n//     alert(`${newName} is already in contact list`);\n//   } else {\n//     setState((state) => ({\n//       contacts: [...state.contacts, contact],\n//     }));\n//   }\n// };\n\n// filterContactsByName = () => {\n//   const { contacts, filter } = state;\n//   if (contacts.length) {\n//     return contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(filter.toLowerCase())\n//     );\n//   }\n// };\n\n// render() {\n//   const { contacts } = state;\n//   return (\n//     <>\n//       <Section title=\"Phonebook\">\n//         <ContactForm addContact={addContact} />\n//       </Section>\n//       <Section title=\"Contacts\">\n//         {contacts.length > 1 && <Filter onChange={changeHandler} />}\n//         <ContactList\n//           contacts={filterContactsByName()}\n//           onDelete={deleteContactbyId}\n//         />\n//       </Section>\n//     </>\n//   );\n//   }\n// }\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3AxAb\",\"input\":\"ContactForm_input__23_pO\"};"],"sourceRoot":""}